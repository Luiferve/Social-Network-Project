*******TODAS LAS CONTRASEÑAS SERAN ENCRIPTADAS Y DESENCRIPTADAS USANDO EL ALGORITMO BASE64********
++++ EL FORMATO DE LA FECHA DEBE SER YYYY/MM/DD, UN FALLO DE ESTA PATRON DARA UN ERROR DE VALIDACION++++

                   Registro de Usuario:

URL: https://ignsw201825-snproject.herokuapp.com/user/register

Petición tipo: POST

Header: Content-Type--------application/json

Body:
{
    "firstName": "nombre",
    "lastName": "apellido",
    "email": "direccion de correo electrónico",
    "password": "contraseña", debe estar encriptada con base64
    "confirmationPassword": "contraseña", debe estar encriptada con base64
    "dateOfBirth": "yyyy/mm/dd"
}

Respuesta:

Mensaje de success y el id del usuario creado

Codigo: 200 OK


Errores:

-Fallo en la validación*
-Correo electrónico ya se encuentra registrado en la base de datos
-Contraseñas no coinciden



                    Inicio de Sesión:

URL: https://ignsw201825-snproject.herokuapp.com/user/login

Petición tipo: POST

Header: Content-Type--------application/json

Body:
{
    "email": "direccion de correo electrónico",
    "password": "contraseña", debe estar encriptada con base64
}

Respuesta:

Json con los datos del Usuario que inicia Sesión

Codigo: 200 OK

Formato:

{
    "id": "ID"
    "firstName": "nombre",
    "lastName": "apellido",
    "email": "direccion de correo electrónico",
    "dateOfBirth": "fecha de nacimiento",
    "authToken": "Token"
}

Errores:

-Fallo en la validación*
-Correo electrónico no existe en la base de datos
-Contraseña no coincide



                    Modificacion de Datos de Usuario Existente

URL: https://ignsw201825-snproject.herokuapp.com/user/update/id

Donde: id es el ID del usuario que se desea modificar

Petición tipo: PUT

Header: Content-Type--------application/json

Body:
{
    "firstName": "nombre",
    "lastName": "apellido",
    "email": "direccion de correo electrónico",
    "password": "contraseña", debe estar encriptada con base64
    "dateOfBirth": "fecha de nacimiento",
    "authToken": "token"
}

Nota: Los Datos que no se quieran modificar se deben mandar igual que como estaban

Respuesta:

Json con mensaje de operación success.

Codigo: 200 OK

Errores:

-Fallo en la validación*
-Id invalido
-Nuevo correo electrónico ya se encuentra registrado en la base de datos



                    Obtener Usuario por Id

URL: https://ignsw201825-snproject.herokuapp.com/user/get/id

Donde: id es el ID del usuario que se desea obtener

Petición tipo: GET

Respuesta:

Json con los datos del Usuario

Codigo: 200 OK

Formato:

{
    "id": "ID",
    "firstName": "Nombre",
    "lastName": "Apellido",
    "email": "direccion de correo electrónico ",
    "password": "contraseña", debe estar encriptada con base64
    "dateOfBirth": "fecha de nacimiento",
    "friends": [
        lista de con los id de amigos
    ],
    "albums": [
        lista con los id de albums
    ]
}

Errores:

-Id invalido



                    Buscar Usuario por Nombre

URL: https://ignsw201825-snproject.herokuapp.com/user/search/name

Donde name puede ser:
-Solo Nombre
-Solo Apellido
-Parte del Nombre
-Parte del Apellido
-Nombre y apellido (se colocara nombre y apellidos sin separacion ej: Si se desea buscar Daniel Rojas, se debe colocar DanielRojas)

Petición tipo: GET

Respuesta:

Json con lista de usuarios en cuyo nombre o apellido este contenida la variable name

Codigo: 200 OK

Formato de cada entrada en la lista:

{
    "id": "ID"
    "firstName": "nombre",
    "lastName": "apellido",
    "email": "direccion de correo electrónico",
    "dateOfBirth": "fecha de nacimiento"
}

Errores:

-No se encontraron resultados que contengan la variable name


               LogOut

URL: https://ignsw201825-snproject.herokuapp.com/user/logout

Petición tipo: POST

Header: Content-Type--------application/json

Body:
{
    {
    	"id": "ID",
        "authToken": "token"
    }
}

Respuesta:

Mensaje de success

Codigo: 200 OK


                Agregar Amigo

URL: https://ignsw201825-snproject.herokuapp.com/user/friend/add

Petición tipo: POST

Header: Content-Type--------application/json

Body:
{
    "userId": "id del usuario que desea agregar amigo",
    "authToken": "token del usuario que desea agregar amigo",
    "friendId": "id del amigo"
}

Respuesta:

Mensaje de success

Codigo: 200 OK


                Eliminar Amigo

URL: https://ignsw201825-snproject.herokuapp.com/user/friend/remove

Petición tipo: DELETE

Header: Content-Type--------application/json

Body:
{
    "userId": "id del usuario que desea eliminar amigo",
    "authToken": "token del usuario que desea eliminar amigo",
    "friendId": "id del amigo"
}

Respuesta:

Mensaje de success

Codigo: 200 OK


           Obtener lista de Amigos de un determinado usuario

URL: https://ignsw201825-snproject.herokuapp.com/user/friend/getLits/{id}

Donde id es el id del usuario

Petición tipo: GET


Respuesta:

Lista con informacion de los amigos

[
    {
        "id": "id",
        "firstName": "nombre",
        "lastName": "apellido",
        "email": "direccion de correo electrónico",
        "dateOfBirth": "fecha de nacimiento"
    }
]



            Agregar Album a Usuario

URL: https://ignsw201825-snproject.herokuapp.com/album/add

Petición tipo: POST

Header: Content-Type--------application/json

Body:
{
    "userId": "id del usuario",
    "authToken": "token",
    "name": "nombre del album", debe ser unico dentro de cada usuario
    "description": "descripcion"
}
Respuesta:

Mensaje de success

Codigo: 200 OK


            Modificar Album

URL: https://ignsw201825-snproject.herokuapp.com/album/update

Petición tipo: PUT

Header: Content-Type--------application/json

Body:
{
         "userId": "id del usuario",
         "authToken": "token",
         "albumId": "id del album que se desea modificar",
         "name": "nombre del album", debe ser unico dentro de cada usuario
          description": "descripcion"
}
Respuesta:

Mensaje de success y el id del album creado

Codigo: 200 OK


                Eliminar Album

URL: https://ignsw201825-snproject.herokuapp.com/album/remove

Petición tipo: DELETE

Header: Content-Type--------application/json

Body:
{
    "userId": "id del usuario",
    "authToken": "token",
    "albumId":  "id del album que se desea eliminar"
}

Respuesta:

Mensaje de success

Codigo: 200 OK


           Obtener lista de Albums de un determinado usuario

URL: https://ignsw201825-snproject.herokuapp.com/album/getLits/{id}

Donde id es el id del usuario

Petición tipo: GET


Respuesta:

Lista con informacion de los albums

[
    {
        "id": id de album,
        "name": "nombre",
        "description": "descripcion",
        "media": [] lista de contenido multimetida(Ids)
    }
]


            Obtener informacion de Album por id

URL: https://ignsw201825-snproject.herokuapp.com/album/get/{id}

Donde id es el id del usuario

Petición tipo: GET


Respuesta:

Información del album

    {
        "id": id de album,
        "name": "nombre",
        "description": "descripcion",
        "media": [] lista de contenido multimetida(Ids)
    }


            Agregar Media a Album

URL: https://ignsw201825-snproject.herokuapp.com/media/add

Petición tipo: POST

Header: Content-Type--------application/json

{
    "userId": "id del usuario",
    "albumId": "id del album",
    "authToken": "token",
    "url": "url de media",
    "link": "enlace a la pagina",
    "type": "tipo"  puede ser: "image", "video", "audio"
    "videoUrl": "url del video" solo si el elmento es video, para cualquier otro caso este atributo no se coloca
}

Respuesta:

Mensaje de success y el id de la nueva media creada

Codigo: 200 OK


            Eliminar  Media de Album

URL: https://ignsw201825-snproject.herokuapp.com/media/remove

Petición tipo: Delete

Header: Content-Type--------application/json


    {
        "userId": "id del usuario",
        "albumId": "id del album",
        "mediaId": "id del contenido multimedia",
        "authToken": "token"
    }


Respuesta:

Mensaje de success

Codigo: 200 OK


            Obtener lista de Media de un determinado album

URL: https://ignsw201825-snproject.herokuapp.com/media/getLits/{id}

Donde id es el id del usuario

Petición tipo: GET


Respuesta:

Lista con informacion media de  un  albums

[
     {
        "id": "id de media",
        "type": "tipo"
        "url": "url,
        "link": "enlace a la pagina",
        "videoUrl": "solo cuando es un video"
     }
]

            Obtener iformacion de Media por id

URL: https://ignsw201825-snproject.herokuapp.com/media/get/{id}

Donde id es el id del usuario

Petición tipo: GET


Respuesta:

Lista con informacion del elemento media

    {
        "id": "id de media",
        "type": "tipo"
        "url": "url,
        "link": "enlace a la pagina",
        "videoUrl": "solo cuando es un video"
    }


        Busqueda en Instagram

URL: https://ignsw201825-snproject.herokuapp.com/search/instagram?q=SEARCH_QUERY
Donde ?q=SEARCH_QUERY es un parametro de busqueda

ejemplo si se desea buscar media con el taga caracas:

https://ignsw201825-snproject.herokuapp.com/search/instagram?q=caracas

instagram solo deja buscar por tags, no se permiten caracateres especiales ni espacios.

devueve una lista con los urls



*Validaciones existentes:

-Campos Vacios o nulos
-Caracteres invalidos en nombre o apellido
-Máxima longitud de nombre y apellido: 50 caracteres
-Mínima longitud de contraseña: 6 caracteres
-Mínima longitud de email: 10 caracteres
-Formato de email invalido
